{"mappings":"AAAA,IAAI,MAAM,CACR,oBACA;IACE;IACA;IACA;IACA;IACA;IACA;CACD,EACD,SAAU,OAAO,EAAE,OAAO,EAAE,MAAM;IAChC,MAAM,MAAM,QAAQ;IACpB,MAAM,WAAW,QAAQ,iBAAiB,IAAI;IAC9C,MAAM,qBACJ,QAAQ,iCAAiC,kBAAkB;IAE7D,MAAM,wBAAwB;QAC5B,IAAI,CAAC,MAAM,GAAG;YACZ,OAAO;gBACL;oBACE,OAAO;oBACP,OACE;gBACJ;gBACA;oBACE,OAAO;oBACP,OAAO;gBACT;gBACA;oBACE,OAAO;oBACP,OAAO;gBACT;gBACA;oBACE,OAAO;oBACP,OAAO;gBACT;gBACA;oBACE,OAAO;oBACP,OAAO;gBACT;gBACA;oBACE,OAAO;oBACP,OAAO;oBACP,KAAK;gBACP;aACD;QACH;IACF;IACA,IAAI,QAAQ,CAAC,uBAAuB;IAEpC,MAAM,cAAc;QAClB,IAAI,CAAC,cAAc,GAAG;IACxB;IACA,IAAI,QAAQ,CAAC,aAAa;IAEzB,CAAA;QACC,IAAI,CAAC,gBAAgB,GAAG;QACxB,IAAI,CAAC,YAAY,GAAG;YAAE,OAAO;YAAM,KAAK;QAAK;IAC/C,CAAA,EAAG,IAAI,CAAC,YAAY,SAAS;IAE7B,QAAQ,IAAI,GAAG;AACjB","sources":["brolang_mode.js"],"sourcesContent":["ace.define(\n  \"ace/mode/brolang\",\n  [\n    \"require\",\n    \"exports\",\n    \"module\",\n    \"ace/lib/oop\",\n    \"ace/mode/text\",\n    \"ace/mode/text_highlight_rules\"\n  ],\n  function (require, exports, module) {\n    const oop = require(\"ace/lib/oop\");\n    const TextMode = require(\"ace/mode/text\").Mode;\n    const TextHighlightRules =\n      require(\"ace/mode/text_highlight_rules\").TextHighlightRules;\n\n    const BroLangHighlightRules = function () {\n      this.$rules = {\n        start: [\n          {\n            token: \"keyword\",\n            regex:\n              \"\\\\b(?:yo|brofunc|bounce|spill|if|else|forEvery|squadGoals)\\\\b\"\n          },\n          {\n            token: \"constant.language.boolean\",\n            regex: /(?:dope|nope)\\b/\n          },\n          {\n            token: \"constant.numeric\",\n            regex: \"\\\\b\\\\d+\\\\b\"\n          },\n          {\n            token: \"string\",\n            regex: '\".*?\"'\n          },\n          {\n            token: \"comment\",\n            regex: \"//.*$\"\n          },\n          {\n            token: \"comment\",\n            start: \"/\\\\*\",\n            end: \"\\\\*/\"\n          }\n        ]\n      };\n    };\n    oop.inherits(BroLangHighlightRules, TextHighlightRules);\n\n    const BroLangMode = function () {\n      this.HighlightRules = BroLangHighlightRules;\n    };\n    oop.inherits(BroLangMode, TextMode);\n\n    (function () {\n      this.lineCommentStart = \"//\";\n      this.blockComment = { start: \"/*\", end: \"*/\" };\n    }).call(BroLangMode.prototype);\n\n    exports.Mode = BroLangMode;\n  }\n);\n"],"names":[],"version":3,"file":"index.752a681b.js.map","sourceRoot":"/__parcel_source_root/"}